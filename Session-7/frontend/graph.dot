digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] aws_autoscaling_attachment.asg_attachment (expand)" [label = "aws_autoscaling_attachment.asg_attachment", shape = "box"]
		"[root] aws_autoscaling_group.asg (expand)" [label = "aws_autoscaling_group.asg", shape = "box"]
		"[root] aws_launch_configuration.webserver_lc (expand)" [label = "aws_launch_configuration.webserver_lc", shape = "box"]
		"[root] aws_lb.webserver_alb (expand)" [label = "aws_lb.webserver_alb", shape = "box"]
		"[root] aws_lb_listener.webserver_listener (expand)" [label = "aws_lb_listener.webserver_listener", shape = "box"]
		"[root] aws_lb_target_group.webserver_alb_tg (expand)" [label = "aws_lb_target_group.webserver_alb_tg", shape = "box"]
		"[root] aws_security_group.alb_sg (expand)" [label = "aws_security_group.alb_sg", shape = "box"]
		"[root] aws_security_group.webserver_sg (expand)" [label = "aws_security_group.webserver_sg", shape = "box"]
		"[root] aws_security_group_rule.alb_egress (expand)" [label = "aws_security_group_rule.alb_egress", shape = "box"]
		"[root] aws_security_group_rule.http_from_lb (expand)" [label = "aws_security_group_rule.http_from_lb", shape = "box"]
		"[root] aws_security_group_rule.http_ingress (expand)" [label = "aws_security_group_rule.http_ingress", shape = "box"]
		"[root] aws_security_group_rule.mysql (expand)" [label = "aws_security_group_rule.mysql", shape = "box"]
		"[root] aws_security_group_rule.webserver_egress (expand)" [label = "aws_security_group_rule.webserver_egress", shape = "box"]
		"[root] data.aws_ami.amazon_linux2 (expand)" [label = "data.aws_ami.amazon_linux2", shape = "box"]
		"[root] data.aws_subnet_ids.default (expand)" [label = "data.aws_subnet_ids.default", shape = "box"]
		"[root] data.aws_vpc.default (expand)" [label = "data.aws_vpc.default", shape = "box"]
		"[root] data.template_file.webserver (expand)" [label = "data.template_file.webserver", shape = "box"]
		"[root] data.terraform_remote_state.password (expand)" [label = "data.terraform_remote_state.password", shape = "box"]
		"[root] data.terraform_remote_state.rds (expand)" [label = "data.terraform_remote_state.rds", shape = "box"]
		"[root] data.terraform_remote_state.rds_sg (expand)" [label = "data.terraform_remote_state.rds_sg", shape = "box"]
		"[root] output.alb_dns" [label = "output.alb_dns", shape = "note"]
		"[root] output.rds_db_endpoint" [label = "output.rds_db_endpoint", shape = "note"]
		"[root] output.rds_db_name" [label = "output.rds_db_name", shape = "note"]
		"[root] output.rds_db_username" [label = "output.rds_db_username", shape = "note"]
		"[root] output.rds_password" [label = "output.rds_password", shape = "note"]
		"[root] output.rds_sg_id" [label = "output.rds_sg_id", shape = "note"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" [label = "provider[\"registry.terraform.io/hashicorp/aws\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/template\"]" [label = "provider[\"registry.terraform.io/hashicorp/template\"]", shape = "diamond"]
		"[root] provider[\"terraform.io/builtin/terraform\"]" [label = "provider[\"terraform.io/builtin/terraform\"]", shape = "diamond"]
		"[root] var.asg_name" [label = "var.asg_name", shape = "note"]
		"[root] var.env" [label = "var.env", shape = "note"]
		"[root] var.instance_type" [label = "var.instance_type", shape = "note"]
		"[root] aws_autoscaling_attachment.asg_attachment (expand)" -> "[root] aws_autoscaling_group.asg (expand)"
		"[root] aws_autoscaling_attachment.asg_attachment (expand)" -> "[root] aws_lb_target_group.webserver_alb_tg (expand)"
		"[root] aws_autoscaling_group.asg (expand)" -> "[root] aws_launch_configuration.webserver_lc (expand)"
		"[root] aws_autoscaling_group.asg (expand)" -> "[root] data.aws_subnet_ids.default (expand)"
		"[root] aws_launch_configuration.webserver_lc (expand)" -> "[root] aws_security_group.webserver_sg (expand)"
		"[root] aws_launch_configuration.webserver_lc (expand)" -> "[root] data.aws_ami.amazon_linux2 (expand)"
		"[root] aws_launch_configuration.webserver_lc (expand)" -> "[root] data.template_file.webserver (expand)"
		"[root] aws_launch_configuration.webserver_lc (expand)" -> "[root] var.instance_type"
		"[root] aws_lb.webserver_alb (expand)" -> "[root] aws_security_group.alb_sg (expand)"
		"[root] aws_lb.webserver_alb (expand)" -> "[root] data.aws_subnet_ids.default (expand)"
		"[root] aws_lb_listener.webserver_listener (expand)" -> "[root] aws_lb.webserver_alb (expand)"
		"[root] aws_lb_listener.webserver_listener (expand)" -> "[root] aws_lb_target_group.webserver_alb_tg (expand)"
		"[root] aws_lb_target_group.webserver_alb_tg (expand)" -> "[root] data.aws_vpc.default (expand)"
		"[root] aws_lb_target_group.webserver_alb_tg (expand)" -> "[root] var.env"
		"[root] aws_security_group.alb_sg (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_security_group.alb_sg (expand)" -> "[root] var.env"
		"[root] aws_security_group.webserver_sg (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_security_group.webserver_sg (expand)" -> "[root] var.env"
		"[root] aws_security_group_rule.alb_egress (expand)" -> "[root] aws_security_group.alb_sg (expand)"
		"[root] aws_security_group_rule.http_from_lb (expand)" -> "[root] aws_security_group.webserver_sg (expand)"
		"[root] aws_security_group_rule.http_ingress (expand)" -> "[root] aws_security_group.alb_sg (expand)"
		"[root] aws_security_group_rule.mysql (expand)" -> "[root] aws_security_group.webserver_sg (expand)"
		"[root] aws_security_group_rule.mysql (expand)" -> "[root] data.terraform_remote_state.rds_sg (expand)"
		"[root] aws_security_group_rule.webserver_egress (expand)" -> "[root] aws_security_group.webserver_sg (expand)"
		"[root] data.aws_ami.amazon_linux2 (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] data.aws_subnet_ids.default (expand)" -> "[root] data.aws_vpc.default (expand)"
		"[root] data.aws_vpc.default (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] data.template_file.webserver (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/template\"]"
		"[root] data.template_file.webserver (expand)" -> "[root] var.env"
		"[root] data.terraform_remote_state.password (expand)" -> "[root] provider[\"terraform.io/builtin/terraform\"]"
		"[root] data.terraform_remote_state.password (expand)" -> "[root] var.env"
		"[root] data.terraform_remote_state.rds (expand)" -> "[root] provider[\"terraform.io/builtin/terraform\"]"
		"[root] data.terraform_remote_state.rds (expand)" -> "[root] var.env"
		"[root] data.terraform_remote_state.rds_sg (expand)" -> "[root] provider[\"terraform.io/builtin/terraform\"]"
		"[root] data.terraform_remote_state.rds_sg (expand)" -> "[root] var.env"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_autoscaling_attachment.asg_attachment (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_lb_listener.webserver_listener (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_security_group_rule.alb_egress (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_security_group_rule.http_from_lb (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_security_group_rule.http_ingress (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_security_group_rule.mysql (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_security_group_rule.webserver_egress (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.alb_dns"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.rds_db_endpoint"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.rds_db_name"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.rds_db_username"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.rds_password"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.rds_sg_id"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] var.asg_name"
		"[root] output.alb_dns" -> "[root] aws_lb.webserver_alb (expand)"
		"[root] output.rds_db_endpoint" -> "[root] data.terraform_remote_state.rds (expand)"
		"[root] output.rds_db_name" -> "[root] data.terraform_remote_state.rds (expand)"
		"[root] output.rds_db_username" -> "[root] data.terraform_remote_state.rds (expand)"
		"[root] output.rds_password" -> "[root] data.terraform_remote_state.password (expand)"
		"[root] output.rds_sg_id" -> "[root] data.terraform_remote_state.rds_sg (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_autoscaling_attachment.asg_attachment (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_lb_listener.webserver_listener (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_security_group_rule.alb_egress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_security_group_rule.http_from_lb (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_security_group_rule.http_ingress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_security_group_rule.mysql (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_security_group_rule.webserver_egress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/template\"] (close)" -> "[root] data.template_file.webserver (expand)"
		"[root] provider[\"terraform.io/builtin/terraform\"] (close)" -> "[root] data.terraform_remote_state.password (expand)"
		"[root] provider[\"terraform.io/builtin/terraform\"] (close)" -> "[root] data.terraform_remote_state.rds (expand)"
		"[root] provider[\"terraform.io/builtin/terraform\"] (close)" -> "[root] data.terraform_remote_state.rds_sg (expand)"
		"[root] root" -> "[root] meta.count-boundary (EachMode fixup)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/template\"] (close)"
		"[root] root" -> "[root] provider[\"terraform.io/builtin/terraform\"] (close)"
	}
}

